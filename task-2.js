function definePrime(num) { // функция, которая принимает на входе число
	let isPrime, result; // объявляем две переменные
	isPrime = true; // присваиваем переменной булево значение

	if (num > 1 && num <= 1000) { // создаем условие при котором переданное число должно быть больше 1 и меньше или равно 1000
		for (let i = 2; i < num; i++) { // создаем цикл, где начальная команда - число должно быть равно 2, условие окончания - число дожно быть меньше переданного параметром num числа и i++ каждый проход цикла увеличивает значение на единицу
			if (num % i === 0) { // задаем условие при котором число заданное параметром num должно без остатка делиться на число в цикле (от 2 до числа на 1 меньше него самого)
				isPrime = false; // в этом случае число составное и переменная isPrime равна ложному значению
			}
		}
		result = isPrime ? `Число ${num} - простое число` : `Число ${num} - составное число`; //в переменную result через тернарный оператор записываем условие при котором если зничение isPrime верно - выведется, что число простое, в противном случае число составное
	} else if (num > 1000) { //добавим условие, если ввели число больше 1000
		result = 'Данные неверны'; // в консоль выведется
	} else if (num === 1) { // уловие для 1
		result = 'Число 1 — не является ни простым, ни составным числом';
	} else if (num === 0) { // уловие для 0
		result = 'Вы ввели 0';
	}
	return result; // возвращяем переменную, которая в зависимости от условий выведет в консоль строку
}
console.log(definePrime(11)) // выведем результат выполнения функции в консоль, вызвав её и передав аргумент